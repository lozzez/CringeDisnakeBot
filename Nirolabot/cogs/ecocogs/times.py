import disnake
from disnake.ext import commands
import random
from utils.databases import UsersDataBase

class Time(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.db = UsersDataBase()
        
    @commands.command()
    @commands.cooldown(1, 1800, commands.BucketType.user)
    async def rob(self, ctx, member: disnake.Member):
        if member:
            await self.db.create_table()
            await self.db.add_user(ctx.author)
            await self.db.add_user(member)
            user = await self.db.get_user(ctx.author)
            user2 = await self.db.get_user(member)
            if user[1] < 100:
                await ctx.send(":emoji_31: –£ –≤–∞—Å –Ω–∞ –±–∞–ª–∞–Ω—Å–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ 100 :coin:")
            elif user2[1] < 100:
                await ctx.send(":emoji_31: –£ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ 100 :coin:")
            else:
                @commands.cooldown(1, 1800, commands.BucketType.user)
                async def _rob():
                    g = random.randint(1, 3)
                    if g == 1:
                        await ctx.send("–£ –≤–∞—Å –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –æ–≥—Ä–∞–±–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞!")
                    elif g == 2:
                        h = random.randint(100, user[1])
                        await self.db.minus_money(ctx.author, h, 0)
                        await ctx.send(f"–í–æ –≤—Ä–µ–º—è –æ–≥—Ä–∞–±–ª–µ–Ω–∏—è –≤—ã –ø–æ—Ç–µ—Ä—è–ª–∏ {h} :coin:")
                    else:
                        j = random.randint(100, user2[1])
                        await self.db.update_money(ctx.author, j, 0)
                        await self.db.minus_money(member, j, 0)
                        embed = disnake.Embed(
                            title="–û–≥—Ä–∞–±–ª–µ–Ω–∏–µ!",
                            description=f'{ctx.author}, –≤—ã –æ–≥—Ä–∞–±–∏–ª–∏ {member} –Ω–∞ {j} :coin:',
                            color=0x2F3136
                        )
                        embed.set_thumbnail(url=member.display_avatar.url)
                        await ctx.send(embed=embed)
                        
                    pass
                await _rob()
        else:
            await ctx.send("<:emoji_31:1121750019410772038>–£–∫–∞–∂–∏—Ç–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞!")    
               
    @rob.error
    async def rob_error(self, ctx, error):
        if isinstance(error, commands.CommandOnCooldown):
            remaining_time = error.retry_after
            minutes = round(remaining_time / 60)
            if minutes == 1:
                await ctx.send(f"–ù–∞ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É —Å—Ç–æ–∏—Ç –∑–∞–¥–µ—Ä–∂–∫–∞! –ü–æ–¥–æ–∂–¥–∏ –µ—â—ë {minutes} –º–∏–Ω—É—Ç—É!")
            elif minutes <= 4:
                await ctx.send(f"–ù–∞ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É —Å—Ç–æ–∏—Ç –∑–∞–¥–µ—Ä–∂–∫–∞! –ü–æ–¥–æ–∂–¥–∏ –µ—â—ë {minutes} –º–∏–Ω—É—Ç—ã!")
            else:
                await ctx.send(f"–ù–∞ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É —Å—Ç–æ–∏—Ç –∑–∞–¥–µ—Ä–∂–∫–∞! –ü–æ–¥–æ–∂–¥–∏ –µ—â—ë {minutes} –º–∏–Ω—É—Ç!")

    @commands.command()
    @commands.cooldown(1, 3600, commands.BucketType.user)
    async def work(self, ctx):
        await self.db.create_table()
        member = ctx.author
        await self.db.add_user(member)
        await self.db.update_money(member, 500, 0)
        user = await self.db.get_user(member)
        embed = disnake.Embed(
            title="–†–∞–±–æ—Ç–∞!",
            description=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {member.display_name} –∑–∞—Ä–∞–±–æ—Ç–∞–ª 500 ü™ô",
            color=0x2F3136
        )
        embed.add_field(name='ü™ô –î–µ–Ω—å–≥–∏', value=f'```{user[1]}```')
        embed.add_field(name=':bank: –ë–∞–Ω–∫', value=f'```{user[2]}```')
        embed.set_thumbnail(url=member.display_avatar.url)
        await ctx.send(embed=embed)    

    @work.error
    async def work_error(self, ctx, error):
        if isinstance(error, commands.CommandOnCooldown):
            remaining_time = error.retry_after
            minutes = round(remaining_time / 60)
            if minutes == 1:
                await ctx.send(f"–ù–∞ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É —Å—Ç–æ–∏—Ç –∑–∞–¥–µ—Ä–∂–∫–∞! –ü–æ–¥–æ–∂–¥–∏ –µ—â—ë {minutes} –º–∏–Ω—É—Ç—É!")
            elif minutes <= 4:
                await ctx.send(f"–ù–∞ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É —Å—Ç–æ–∏—Ç –∑–∞–¥–µ—Ä–∂–∫–∞! –ü–æ–¥–æ–∂–¥–∏ –µ—â—ë {minutes} –º–∏–Ω—É—Ç—ã!")
            else:
                await ctx.send(f"–ù–∞ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É —Å—Ç–æ–∏—Ç –∑–∞–¥–µ—Ä–∂–∫–∞! –ü–æ–¥–æ–∂–¥–∏ –µ—â—ë {minutes} –º–∏–Ω—É—Ç!")

    @commands.command()
    @commands.cooldown(1, 7200, commands.BucketType.user)
    async def timely(self, ctx):
        await self.db.create_table()
        member = ctx.author
        await self.db.add_user(member)
        await self.db.update_money(member, 700, 0)
        user = await self.db.get_user(member)
        embed = disnake.Embed(
            title="–ï–∂–µ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –±–æ–Ω—É—Å!",
            description=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {member.display_name} –ø–æ–ª—É—á–∏–ª 700 ü™ô",
            color=0x2F3136
        )
        embed.add_field(name='ü™ô –î–µ–Ω—å–≥–∏', value=f'```{user[1]}```')
        embed.add_field(name=':bank: –ë–∞–Ω–∫', value=f'```{user[2]}```')
        embed.set_thumbnail(url=member.display_avatar.url)
        await ctx.send(embed=embed)

    @timely.error
    async def timely_error(self, ctx, error):
        if isinstance(error, commands.CommandOnCooldown):
            remaining_time = error.retry_after
            minutes = round(remaining_time / 60)
            if minutes == 1:
                await ctx.send(f"–ù–∞ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É —Å—Ç–æ–∏—Ç –∑–∞–¥–µ—Ä–∂–∫–∞! –ü–æ–¥–æ–∂–¥–∏ –µ—â—ë {minutes} –º–∏–Ω—É—Ç—É!")
            elif minutes <= 4:
                await ctx.send(f"–ù–∞ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É —Å—Ç–æ–∏—Ç –∑–∞–¥–µ—Ä–∂–∫–∞! –ü–æ–¥–æ–∂–¥–∏ –µ—â—ë {minutes} –º–∏–Ω—É—Ç—ã!")
            else:
                await ctx.send(f"–ù–∞ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É —Å—Ç–æ–∏—Ç –∑–∞–¥–µ—Ä–∂–∫–∞! –ü–æ–¥–æ–∂–¥–∏ –µ—â—ë {minutes} –º–∏–Ω—É—Ç!")
                

    @commands.command()
    @commands.cooldown(1, 86400, commands.BucketType.user)
    async def daily(self, ctx):
        await self.db.create_table()
        member = ctx.author
        await self.db.add_user(member)
        await self.db.update_money(member, 900, 0)
        user = await self.db.get_user(member)
        embed = disnake.Embed(
            title="–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å!",
            description=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {member.display_name} –ø–æ–ª—É—á–∏–ª 900 ü™ô",
            color=0x2F3136
        )
        embed.add_field(name='ü™ô –î–µ–Ω—å–≥–∏', value=f'```{user[1]}```')
        embed.add_field(name=':bank: –ë–∞–Ω–∫', value=f'```{user[2]}```')
        embed.set_thumbnail(url=member.display_avatar.url)
        await ctx.send(embed=embed)
        
    @daily.error
    async def daily_error(self, ctx, error):
        if isinstance(error, commands.CommandOnCooldown):
            remaining_time = error.retry_after
            hours = round(remaining_time / 3600)
            minutes = round(remaining_time / 60)
            if hours < 1:
                if minutes == 1:
                    await ctx.send(f"–ù–∞ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É —Å—Ç–æ–∏—Ç –∑–∞–¥–µ—Ä–∂–∫–∞! –ü–æ–¥–æ–∂–¥–∏ –µ—â—ë {minutes} –º–∏–Ω—É—Ç—É!")
                elif minutes <= 4:
                    await ctx.send(f"–ù–∞ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É —Å—Ç–æ–∏—Ç –∑–∞–¥–µ—Ä–∂–∫–∞! –ü–æ–¥–æ–∂–¥–∏ –µ—â—ë {minutes} –º–∏–Ω—É—Ç—ã!")
                else:
                    await ctx.send(f"–ù–∞ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É —Å—Ç–æ–∏—Ç –∑–∞–¥–µ—Ä–∂–∫–∞! –ü–æ–¥–æ–∂–¥–∏ –µ—â—ë {minutes} –º–∏–Ω—É—Ç!")
            elif hours == 1:
                await ctx.send(f"–ù–∞ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É —Å—Ç–æ–∏—Ç –∑–∞–¥–µ—Ä–∂–∫–∞! –ü–æ–¥–æ–∂–¥–∏ –µ—â—ë 1 —á–∞—Å!")
            elif hours <= 4:
                await ctx.send(f"–ù–∞ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É —Å—Ç–æ–∏—Ç –∑–∞–¥–µ—Ä–∂–∫–∞! –ü–æ–¥–æ–∂–¥–∏ –µ—â—ë {hours} —á–∞—Å–∞!")
            elif hours == 21:
                await ctx.send(f"–ù–∞ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É —Å—Ç–æ–∏—Ç –∑–∞–¥–µ—Ä–∂–∫–∞! –ü–æ–¥–æ–∂–¥–∏ –µ—â—ë 21 —á–∞—Å!")
            elif hours <= 24:
                await ctx.send(f"–ù–∞ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É —Å—Ç–æ–∏—Ç –∑–∞–¥–¥–µ—Ä–∂–∫–∞! –ü–æ–¥–æ–∂–¥–∏ –µ—â—ë {hours} —á–∞—Å–∞")
            else:
                await ctx.send(f"–ù–∞ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É —Å—Ç–æ–∏—Ç –∑–∞–¥–µ—Ä–∂–∫–∞! –ü–æ–¥–æ–∂–¥–∏ –µ—â—ë {hours} —á–∞—Å–æ–≤!")   
        
def setup(bot):
    bot.add_cog(Time(bot))